{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import data from\"../../utils/constants/provinces\";var covidSlice=createSlice({name:\"Covid slice\",initialState:{covid:data.provinces},reducers:{updateCovid:function updateCovid(state,action){var covid=state.covid;var _action$payload=action.payload,kota=_action$payload.kota,jumlah=_action$payload.jumlah,status=_action$payload.status;var updateStatus=covid.findIndex(function(index){return index.kota===kota;});covid[updateStatus][status]=parseInt(covid[updateStatus][status]+parseInt(jumlah));}}});//generate action and reducers\nvar updateCovid=covidSlice.actions.updateCovid;var covidReducer=covidSlice.reducer;export{updateCovid};export default covidReducer;","map":{"version":3,"sources":["/home/icha/Documents/SMT4/UAS-FE/src/features/covidSlice/index.js"],"names":["createSlice","data","covidSlice","name","initialState","covid","provinces","reducers","updateCovid","state","action","payload","kota","jumlah","status","updateStatus","findIndex","index","parseInt","actions","covidReducer","reducer"],"mappings":"AAAA,OAAQA,WAAR,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,iCAAjB,CAEA,GAAMC,CAAAA,UAAU,CAAGF,WAAW,CAAC,CAC3BG,IAAI,CAAE,aADqB,CAE3BC,YAAY,CAAG,CACXC,KAAK,CAAEJ,IAAI,CAACK,SADD,CAFY,CAK3BC,QAAQ,CAAC,CACLC,WADK,sBACOC,KADP,CACaC,MADb,CACqB,CACtB,GAAOL,CAAAA,KAAP,CAAeI,KAAf,CAAOJ,KAAP,CACA,oBAA6BK,MAAM,CAACC,OAApC,CAAOC,IAAP,iBAAOA,IAAP,CAAYC,MAAZ,iBAAYA,MAAZ,CAAmBC,MAAnB,iBAAmBA,MAAnB,CACA,GAAMC,CAAAA,YAAY,CAAGV,KAAK,CAACW,SAAN,CAAgB,SAACC,KAAD,QAAUA,CAAAA,KAAK,CAACL,IAAN,GAAeA,IAAzB,EAAhB,CAArB,CACAP,KAAK,CAACU,YAAD,CAAL,CAAoBD,MAApB,EAA8BI,QAAQ,CAACb,KAAK,CAACU,YAAD,CAAL,CAAoBD,MAApB,EAA8BI,QAAQ,CAACL,MAAD,CAAvC,CAAtC,CAEC,CAPA,CALkB,CAAD,CAA9B,CAiBA;AACA,GAAOL,CAAAA,WAAP,CAAsBN,UAAU,CAACiB,OAAjC,CAAOX,WAAP,CACA,GAAMY,CAAAA,YAAY,CAAGlB,UAAU,CAACmB,OAAhC,CAEA,OAAQb,WAAR,EACA,cAAeY,CAAAA,YAAf","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport data from \"../../utils/constants/provinces\";\n\nconst covidSlice = createSlice({\n    name :\"Covid slice\",\n    initialState : {\n        covid: data.provinces\n    },\n    reducers:{\n        updateCovid(state,action) {\n            const {covid} =state;\n            const {kota,jumlah,status} = action.payload;\n            const updateStatus = covid.findIndex((index)=> index.kota === kota)\n            covid[updateStatus][status] = parseInt(covid[updateStatus][status] + parseInt(jumlah))\n\n            }\n        },\n    },\n)\n\n//generate action and reducers\nconst {updateCovid} = covidSlice.actions;\nconst covidReducer = covidSlice.reducer;\n\nexport {updateCovid};\nexport default covidReducer;"]},"metadata":{},"sourceType":"module"}